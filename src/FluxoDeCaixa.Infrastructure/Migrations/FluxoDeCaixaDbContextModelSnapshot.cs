// <auto-generated />
using System;
using FluxoDeCaixa.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FluxoDeCaixa.Infrastructure.Migrations
{
    [DbContext(typeof(FluxoDeCaixaDbContext))]
    partial class FluxoDeCaixaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FluxoDeCaixa.Domain.Aggregate_Root.FluxoDeCaixa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("FluxosDeCaixa");
                });

            modelBuilder.Entity("FluxoDeCaixa.Domain.Entities.Transacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FluxoDeCaixaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Valor")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<bool>("isCredito")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("FluxoDeCaixaId");

                    b.ToTable("Transacoes");
                });

            modelBuilder.Entity("FluxoDeCaixa.Domain.Entities.Transacao", b =>
                {
                    b.HasOne("FluxoDeCaixa.Domain.Aggregate_Root.FluxoDeCaixa", "FluxoDeCaixa")
                        .WithMany("Transacoes")
                        .HasForeignKey("FluxoDeCaixaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FluxoDeCaixa");
                });

            modelBuilder.Entity("FluxoDeCaixa.Domain.Aggregate_Root.FluxoDeCaixa", b =>
                {
                    b.Navigation("Transacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
